@page "/create"
@attribute [Authorize]
@using SuggestionSiteUI.Components
@using SuggestionSiteUI.Models
@inject NavigationManager nav
@inject AuthenticationStateProvider auth
@inject ICategoryService categoryService
@inject IUserService userService
@inject ISuggestionService suggestionService

<h1 class="text-uppercase text-center mb-4">Make a Suggestion</h1>

<div class="create-form row justify-content-center">
    <div class="form-layout col-lg-10 col-xl-8 p-4 bg-white">
        <div class="d-flex justify-content-end">
            <button class="btn-close" @onclick="ClosePage"></button>
        </div>

        @if (categories != null)
        {
            <EditForm Model="svm" OnValidSubmit="CreateSuggestion">
                <DataAnnotationsValidator></DataAnnotationsValidator>
                <ValidationSummary></ValidationSummary>

                <div class="mb-4">
                    <label for="name" class="form-label fw-bold text-uppercase">Name</label>
                    <div class="mb-2">Focus on the topic of technology you want to learn about</div>
                    <InputText id="name" class="form-control" @bind-Value="svm.Name"></InputText>
                </div>

                <div class="mb-4">
                    <label for="category" class="form-label fw-bold text-uppercase">Category</label>
                    <div class="mb-2">Choose 1 category</div>
                    <div class="col-lg-8">
                        <CustomRadioGroup id="category" @bind-Value="svm.CategoryId">
                            @foreach (var c in categories)
                            {
                                <div class="radio-item-group m-2">
                                    <InputRadio id="@c.Id" class="d-none" Value="c.Id"></InputRadio>
                                    <label for="@c.Id" class="py-1 px-4 w-100">@c.Name: @c.Description</label>
                                </div>
                            }
                        </CustomRadioGroup>
                    </div>
                </div>

                <div class="mb-4">
                    <label for="descrition" class="form-label fw-bold text-uppercase">Description</label>
                    <div class="mb-2">Briefly describe your suggestion.</div>
                    <InputTextArea id="descrition" class="form-control" @bind-Value="svm.Description"></InputTextArea>
                </div>

                <div class="d-flex justify-content-center">
                    <button type="submit" class="btn-main btn btn-lg text-uppercase px-4 border-3">Suggest</button>
                </div>
            </EditForm>
        }
    </div>
</div>

@code {
    List<Category> categories;
    User user;
    SuggestionViewModel svm = new();

    protected override async Task OnInitializedAsync()
    {
        categories = await categoryService.FindAllAsync();

        // user = await userService.FindOneFromAuthAsync("a");
        user = await auth.GetUser(userService);
    }

    async Task CreateSuggestion()
    {
        var suggestion = new Suggestion
        {
            Name = svm.Name,
            Description = svm.Description,
            Author = new UserLite(user),
            Category = categories.FirstOrDefault(c => c.Id == svm.CategoryId)
        };

        if (suggestion.Category == null)
        {
            svm.CategoryId = "";
            return;
        }

        await suggestionService.InsertOneAsync(suggestion);
        svm = new();
        ClosePage();
    }

    void ClosePage() => nav.NavigateTo("/");
}
